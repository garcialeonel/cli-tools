#!/bin/bash

# adjust-brightness.sh: uses xrandr to adjust brightness levels of monitors
#
# see https://www.ostechnix.com/how-to-adjust-monitor-brightness-from-command-line-in-linux/
#
# get list of connected displays
# xrandr -q | grep ' connected' | cut -d ' ' -f1
#
# e.g. xrandr --output LVDS-1 --brightness 0.7
# sets brightness for LVDS-1 to 70%

PROGNAME=$(basename $0)
CURRENTDATE=$(date +"%x %r %Z") 
MONITORLIST=$(xrandr --listmonitors | cut -d ' ' -f6)
LEFTMONITOR=$(xrandr --listmonitors | head -n 2 | cut -d ' ' -f6)
RIGHTMONITOR=$(xrandr --listmonitors | tail -n 1 | cut -d ' ' -f6)
LOGFILE="$HOME/scripts/log/adjust-brightness.log"

# check for log file, prompt for creation
if [[ ! -f ${LOGFILE} ]]; then
    echo "\"${LOGFILE}\" does not exist."
    read -p "Would you like to create a new log file? (y/n): "
    case ${REPLY} in
        y)
            /usr/bin/touch ${LOGFILE}
            [[ $? -eq 0 ]] || ( echo "${LINENO}: ERROR: creating log file failed." && exit 1 )
            echo -e "\nCreated ${LOGFILE}"
            ;;
        *)
            echo
            ;;
    esac
fi

# output list of connected displays
echo -e "\nConnected monitors: $MONITORLIST\n"

# prompt for brightness setting
read -p "Adjust brightness to [0.1-0.9/1.0]: "
echo
case ${REPLY} in
    0.[1-9] | 1.0) 
        echo "Adjusting left monitor..."
        xrandr --output $LEFTMONITOR --brightness $REPLY
        sleep 1

        echo "Adjusting right monitor..."
        sleep 1
        xrandr --output $RIGHTMONITOR --brightness $REPLY

        echo -e "${PROGNAME}[$$]: Monitor brightness set to "${REPLY}" on "${CURRENTDATE}"" 2>&1 | tee -a $LOGFILE >/dev/null
        echo -e "done.\n"

        ;;
    q|Q)
        exit 
        ;;
    *)
        echo "ERROR: wrong input"
        exit 1
        ;;
esac

exit 0
